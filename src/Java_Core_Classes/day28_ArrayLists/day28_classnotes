Data Structure:
    Array: size is fixed, supports both primitives & non primitives
    Collection: size is dynamic, does not support primitives
    Map:

ArrayList:  - is a part of Collection (also size is dynamic and does not support primitives)
            - internally uses Array (has index numbers)

            import java.util.ArrayList;

            - size is automatically adjusted

            declaration:
            ArrayList <DataType> name = new ArrayList <DataType> ();

            - no primitive data type!!

ArrayList Methods:
        add(Data): adds the data after the last index of the ArrayList

        add(index, Data): inserts the data in the given index

        size(): shows the length of the list

        get(index): returns the element at the given index

        set(index, Data): replace the old element on the given index with the new Data

        remove(int index): removes the element at the given index, returns boolean

        remove(Object): removes the given object from the list --overloaded method

        clear(): removes all the element of the ArrayList, the size will be zero

        indexOf(): returns the index of the given element starting from the beginning

        lasIndexOf(): return the index of the given element starting from the end of the list

        contains(): returns true if the element is contained in the list, otherwise false

        equals(ArrayList): returns true if two arraylists are equal (same elements in same order)

        isEmpty(): checks if